import React, { useState, useEffect } from "react"
import styled from "styled-components"


const Header = styled.header` // componente estilizado de styled-components
  background: #db7093;
  text-align: center;
  border-radius: 0.2em;
  color: #FFF;
  padding: 0.3em;
  margin: 0.3em;
  font-size: 14px;
`

const Button = styled.button`
  padding: 0.6em 1.5em;
  background: ${(props) => props.bg || 'black'}; //Se lee: en caso de que la prop sea true (este active) que le agregue un color purple, en caso contrario que agregue un color black
  border-radius: 0.1em;
  color: #FFF;
  border: 0;
  margin: 0.4em;
`

const ButtonSpecial = styled(Button)` // Componente que extiende los estilos del componente estilizado Button
  color: gray;
  transition: all 300ms ease-out;

  &:hover {
    transform: scale(1.3);
  }
`

const Move = ({className}) => { // Componente funcional - className es la prop para pasar los estilos que creamos en MoveStyled
  const [ mouseX, setMouseX ] = useState(0)

  const handleMove = (e) => {
    setMouseX(e.clientX)
  }

  useEffect(() => {
    window.addEventListener('mousemove', handleMove) // se lee: al objeto window se le va a agregar un eventListener que se dispare cuando el maousemove (el cursosr del mause) se mueva sobre el viewport, y este va a disparar un manejador llamado handlreMove

    return () => {
      window.removeEventListener('mousemove', handleMove) // Limpiamos el listener
    }
  }, [])

  return ( // className hace referencia a la prop que pasamos en el componente funcional Move (ver linea 33) 
    <div className={className}>
      { mouseX }
    </div>
  )
}

const MoveStyled = styled(Move)`
  background: yellow;
  font-size: 30px;
  height: 200px;
  text-align: center;
`

const App = () => {
  return (
    <div>
        <Header>
          <h1> 
            Styled Components
          </h1>
        </Header>

        <Button>
          Un Boton
        </Button>

        <ButtonSpecial>
          Special
        </ButtonSpecial>

        <MoveStyled />
    </div>
  )
}

export default App

// Nota: Este es el componente padre (principal) {}

// Nota: En esta clae vamos a aprender a extender estilos de componentes que previamente ya hemos estilizado:
// como es el caso del componente estilizado Button (ver linea 15), del cual se extiende el componente estilizado ButonSpecial (ver linea 24) 
// De esta manera tambien se PUEDE estilizar compoenntes de librerias de terceros.