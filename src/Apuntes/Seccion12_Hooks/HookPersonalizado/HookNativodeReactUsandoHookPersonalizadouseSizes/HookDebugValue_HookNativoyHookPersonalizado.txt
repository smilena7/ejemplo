import { click } from "@testing-library/user-event/dist/click";
import React, { useState, useEffect, useDebugValue } from "react"; 

const Header = () => {
  const styles = {
    background: 'linear-gradient(20deg, #6813cb, #2575fc)',
    textAlign: 'center',
    borderRadius: '0.2em',
    color: '#FFF',
    padding: '0.3em',
    margin: '0.3em',
    fontSize: '14px'
  }

  return (
    <header style={styles}>
      <h1>
        Hook useDebugValue()
        <span
          role='img'
          aria-label='hook emoji'
        >
          âš“
        </span> 
      </h1>
    </header>
  )
}

// Hook personazliado que se encarge de revisar el ancho y alto del navegador
const useSizes = () => {
  const [ width, setWidth ] = useState(window.innerWidth)
  const [ height, setHeight ] = useState(window.innerHeight)

  useDebugValue('PrimerHook') // en la consola, en la herramienta de Component, podemos ver este hook en el component App

  // Agregar listener
  const handleResize = () => {
    setWidth(window.innerWidth)
    setHeight(window.innerHeight)
  }

  useEffect(() => { // IMPORTANTE: cada vez que agreguemos los linestener dentro del hook useEffect, debemos limpiarlo en cada ejecucion, esto de hace en el return:
    window.addEventListener('resize', handleResize)

    return () => {
      window.removeEventListener('resize', handleResize)
    }
  }, [])

  return {
    width,
    height
  }

}

const App = () => {  
  const { height, width } = useSizes() // esta es una destructuracion de los datos: const data = useSizes()

  return (
    <div>
      <Header />
      <h1>
        Width: { width }px Height: { height }px
      </h1>
    </div>
  )
}


export default App


// El useDeubValue es un hook nativo de React
// Este hook nos ayuda en la etapa de depuracion justamente en conjunto con las herramientas de desarrollo de react (Componente, Profiles, que estan en la consola)
// En contexto, este hook nos ayuda a agregar etiquetas personalizadas ara poder identificar los hook dentro de las herramientas de desarrollo de react (ver linea 35)