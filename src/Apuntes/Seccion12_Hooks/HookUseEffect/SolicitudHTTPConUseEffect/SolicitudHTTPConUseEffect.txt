import React, { useState, useEffect } from "react"; // Esto es importar con destructuracion

const Header = () => {
  const styles = {
    background: 'linear-gradient(20deg, #6813cb, #2575fc)',
    textAlign: 'center',
    borderRadius: '0.2em',
    color: '#FFF',
    padding: '0.3em',
    margin: '0.3em',
    fontSize: '14px'
  }

  return (
    <header style={styles}>
      <h1>
        Solicitud HTTP con useEffect()
        <span
          role='img'
          aria-label='hook emoji'
        >
          âš“
        </span> 
      </h1>
    </header>
  )
}

const App = () => {
  const [ users, setUsers ] = useState([])
  const [ isFetching, setFetching ] = useState(true)

  useEffect(() => {
    fetch('https://jsonplaceholder.typicode.com/users')
      .then(res => res.json())
      .then(users => {
        setUsers(users)
        setFetching(false)
      })
  }, [])

  return (
    <div>
      <Header />
      { isFetching && <h1>Cargando...</h1> } 
      <ul>
        { users.map(user => (
          <li key={user.id}>
            {user.name}
          </li>
        )) }
      </ul>
    </div>
  )
}


export default App

// NOTA: Importante saber que si a la hora de hacer la solicitud a la api, por ejemplo con useEffect, y si no se pone como segundo parametro el array vacio
// este (a traves del Network podemos verificar), estara haciendo una solicitud infinita, un bucle, ya que no se esta deteniendo la ejecucion (y esta se detiene con un array vacio)
// con este array vacio haremos que la solicitud se ejecute una sola vez (en el momento en que el componente es mondado)
