import React, { Component, useState } from "react";

const Header = () => {
  const styles = {
    background: 'linear-gradient(20deg, #6813cb, #2575fc)',
    textAlign: 'center',
    borderRadius: '0.2em',
    color: '#FFF',
    padding: '0.3em',
    margin: '0.3em',
    fontSize: '14px'
  }

  return (
    <header style={styles}>
      <h1>
        Hook useState
        <span
          role='img'
          aria-label='hook emoji'
        >
          âš“
        </span> 
      </h1>
    </header>
  )
}

const App = () => {

  // Al hacer la ejecucion de este hook, nos va a retornar una array [ value, fun() ] (en la primera posicion del array nos retorna el valor del estado(que sera 0) y en el segundo indice nos retorna una funcion, la cual ayudara para hacer la actualizacion del estado). De esta manera podemos almacenar dentro de una constante el valor que nos esta regresando (0), y podemos almacenar el estado actual (que se encuentra en la posicion 0 del array-value-)
  const [ clicks, setClicks ] = useState(0) // Hacemos destructuracion e inicializamos el estado (de clicks) a cero

  // NOTA: Otra forma de actualizar el estado es:
  // const addClicks = () => {
  //   setClicks(clicks +1)
  //} Y en la parte de button, en onClick, se pode {addClicks}

  return (
    <div>
        <Header />
        <button onClick={() => {
          setClicks(clicks + 1) // actualizamos el estado
        }}>
          Clicks ({ clicks })
        </button>
      </div>
  )
}


export default App





