import React, { useState, useEffect, useRef } from "react"; // Esto es importar con destructuracion
import { useDebounce } from 'use-debounce';

const Header = () => {
  const styles = {
    background: 'linear-gradient(20deg, #6813cb, #2575fc)',
    textAlign: 'center',
    borderRadius: '0.2em',
    color: '#FFF',
    padding: '0.3em',
    margin: '0.3em',
    fontSize: '14px'
  }

  return (
    <header style={styles}>
      <h1>
        Ejemplo aplicando hooks de terceros de NPM
        <span
          role='img'
          aria-label='hook emoji'
        >
          ⚓
        </span> 
      </h1>
    </header>
  )
}

const App = () => {
  const [name, setName  ] = useState('')
  const [ search ] = useDebounce(name, 1000) // hook de tercero NPM / 1000 de milisegundos
  const [ products, setProducts ] = useState([])

  useEffect(() => {
      // Solicitud HTTP
      fetch('https://universidad-react-api-test.luxfenix.now.sh/products?name=' + name) // ?name es un query
        .then(res => res.json())
        .then(data => setProducts(data.products))
  }, [ search ]) // para evitar el bucle infinito


  const handleInput = (e) => {
    setName(e.target.value)
  }

  return (
    <div>
      <Header />
      <input 
        type='text'
        onChange={handleInput} 
      />
      <ul>
        {products.map(product => (
          <li key={product.id}>
            { product.name }
          </li>
        ))}
      </ul>
    </div>
  )
}


export default App

// NOTA: En esta clase se harà practicamente el mismo efecto que se hizo con bounce, pero en este caso con un tercero de npm (use-debounce)
// Para ello debemos 1, instalar useDebounce en la terminal (npm i use-debounce)
// 2, importar el useDebounce 
// 3, luego en el componente principal que en este caso es App, se pone en constante:
// const [ search ] = useDebounce(name) - search corresponde al nombre de la propiedad de retrado, luego se llama el hook Debounce y en parentesis se enlaza con la propiedad de interes y los milisegundos de retraso