import React from 'react'
import { BrowserRouter, Route, Link, NavLink } from 'react-router-dom'
import './App.css'

const Hola = () => (
  <h1>Hola</h1>
)

const Productos = (props) => {
  return (
    <div>
      <h1>Productos</h1>
      <Link to='/productos/gamers'>Gamers</Link>
      <Link to='/productos/hogar'>Hogar</Link>
    </div>
  )
}

const Home = (props) => (
    <h1>Home</h1>
)

const ProductosCategoria = ({ match }) => {
  console.log(match)
  return (
    <div>
      <h1>Categoria: { match.params.categoria }</h1>
    </div>
  )
}

const navStyles = {
  display: 'flex',
  justifyContent: 'space-around'
}

const NavActive = {
  color: 'orangered'
}

const Navegation = () => (
  <nav style={navStyles}>
    <NavLink
      to='/'
      exact
      activeStyle={NavActive}
    >
      Home
    </NavLink>
    <NavLink
      to='/hola'
      activeClassName='navActive'
    >
      Hola
    </NavLink>
    <NavLink
      to='/productos'
      activeStyle={NavActive}
    >
      Productos
    </NavLink>
    <NavLink 
      to='/ropa' 
      activeStyle={NavActive}
    >
      Ropa
    </NavLink>
  </nav>
)

const Ropa = ({ location }) => {
  console.log(location)

  // MTETODO NATIVOOOOO //

  const query = new URLSearchParams(location.search) // de esta forma extraemos la informacion de los parametros de consulta sin necesidad de modificar la ruta (ver linea 101)
  const color = query.get('color')
  const talla = query.get('talla')

  return (
    <div>
      <h1>Ropa</h1>

      <div>
        Color: { color }
      </div>

      <div>
        Talla: { talla }
      </div>
    </div>
  )
}

const App = () => {
  return (
    <BrowserRouter>
      <Navegation />
      <Route path='/' exact render={Home} />
      <Route path='/hola' render={Hola} />
      <Route path='/productos' exact render={Productos}/>
      <Route path='/productos/:categoria/:id?' render={ProductosCategoria}/>
      <Route path='/ropa' render={Ropa} />
    </BrowserRouter>
  )
}

export default App

// Nota: Este es el componente padre (principal) {}

// Una forma que tenemos para poder pasar informacion desde la ruta (de navegacion) hacia los componentes 
// es a traves de los PARAMETROS DE CONSULTA, y estos se declaran de la siguiente forma:
// ddespues de escirbir la ruta, por ejemplo /ropa se escribe el signo de interrogacion y posteriormente el nombre de nuestro parametro de consulta (query string) por ejemplo color, luego el signo igual y seguido le pasamo el valor, ejemplo rojo asi:
// /ropa?color=rojo
// TAMBIEN es posible pasar mas de un parametro de consulta en una misma ruta, asi:
// /ropa?color=rojo&talla=s
// ?color=rojo es 1 parametro de consulta
// & es el conector 
// talla=s es otro parametro de consulta







// FORMA DE EXTRAER INFORMAICON DE LOS PARAMETROS DE CONSULTA: CON LIBRERIA QUERY-SRING 

// 1. Lo primero es hacer la instalacion de la libreria con el siguiente comando:
// npm i query-string

// 2. Paso seguido se be importar la libreria

import React from 'react'
import { BrowserRouter, Route, Link, NavLink } from 'react-router-dom'
import queryString from 'query-string'
import './App.css'

const Hola = () => (
  <h1>Hola</h1>
)

const Productos = (props) => {
  return (
    <div>
      <h1>Productos</h1>
      <Link to='/productos/gamers'>Gamers</Link>
      <Link to='/productos/hogar'>Hogar</Link>
    </div>
  )
}

const Home = (props) => (
    <h1>Home</h1>
)

const ProductosCategoria = ({ match }) => {
  console.log(match)
  return (
    <div>
      <h1>Categoria: { match.params.categoria }</h1>
    </div>
  )
}

const navStyles = {
  display: 'flex',
  justifyContent: 'space-around'
}

const NavActive = {
  color: 'orangered'
}

const Navegation = () => (
  <nav style={navStyles}>
    <NavLink
      to='/'
      exact
      activeStyle={NavActive}
    >
      Home
    </NavLink>
    <NavLink
      to='/hola'
      activeClassName='navActive'
    >
      Hola
    </NavLink>
    <NavLink
      to='/productos'
      activeStyle={NavActive}
    >
      Productos
    </NavLink>
    <NavLink 
      to='/ropa' 
      activeStyle={NavActive}
    >
      Ropa
    </NavLink>
  </nav>
)

// FORMA CON LA LIBRERIA QUERY-STRING
const Ropa = ({ location }) => {
  console.log(location)

  const {color, talla} = queryString.parse(location.search) // de esta forma estraemos la informacion de los parametros de consulta sin necesidad de modificar la ruta (ver linea 101)

  return (
    <div>
      <h1>Ropa</h1>

      <div>
        Color: { color }
      </div>

      <div>
        Talla: { talla }
      </div>
    </div>
  )
}

const App = () => {
  return (
    <BrowserRouter>
      <Navegation />
      <Route path='/' exact render={Home} />
      <Route path='/hola' render={Hola} />
      <Route path='/productos' exact render={Productos}/>
      <Route path='/productos/:categoria/:id?' render={ProductosCategoria}/>
      <Route path='/ropa' render={Ropa} />
    </BrowserRouter>
  )
}

export default App

// Nota: Este es el componente padre (principal) {}

// Una forma que tenemos para poder pasar informacion desde la ruta (de navegacion) hacia los componentes 
// es a traves de los PARAMETROS DE CONSULTA, y estos se declaran de la siguiente forma:
// ddespues de escirbir la ruta, por ejemplo /ropa se escribe el signo de interrogacion y posteriormente el nombre de nuestro parametro de consulta (query string) por ejemplo color, luego el signo igual y seguido le pasamo el valor, ejemplo rojo asi:
// /ropa?color=rojo
// TAMBIEN es posible pasar mas de un parametro de consulta en una misma ruta, asi:
// /ropa?color=rojo&talla=s
// ?color=rojo es 1 parametro de consulta
// & es el conector 
// talla=s es otro parametro de consulta



// NOTAAAA:


// FORMA SIN DESTRUCTRURACION:
// const Ropa = ({ location }) => {
//  console.log(location)

//  const query = queryString.parse(location.search) // de esta forma estraemos la informacion de los parametros de consulta sin necesidad de modificar la ruta (ver linea 101)

//  return (
//    <div>
//      <h1>Ropa</h1>

//      <div>
//        Color: { query.color }
//      </div>

//      <div>
//        Talla: { query.talla }
//      </div>
//    </div>
//  )
//}

FORMA CON DESTRUCTURACION:
//const Ropa = ({ location }) => {
//  console.log(location)

//  const {color, talla} = queryString.parse(location.search) // de esta forma estraemos la informacion de los parametros de consulta sin necesidad de modificar la ruta (ver linea 101)

//  return (
//    <div>
//      <h1>Ropa</h1>

//      <div>
//        Color: { color }
//      </div>

//      <div>
//        Talla: { talla }
//      </div>
//    </div>
//  )
//}