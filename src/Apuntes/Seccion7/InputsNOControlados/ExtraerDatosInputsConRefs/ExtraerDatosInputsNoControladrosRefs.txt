import React, { Component } from "react";

class InputiNoControlado extends Component { 
  nombre = React.createRef()
  email = React.createRef()

  handleClick = () => {
    const nombre = this.nombre.current.value
    const email = this.email.current.value

    // Manejando datos
    this.props.onSend({ nombre, email })
  }

  render () {
    return (
      <div>
        <input 
          type="text" 
          ref={this.nombre}
          placeholder='Nombre'
        />
        <input 
          type="text"
          ref={this.email} 
          placeholder='Email'
        />
        <button onClick={this.handleClick}>
          Enviar
        </button>
      </div>      
    )
  }
}

const Unicorn = () => ( // forma correcta de ingresar un emoji
  <span role='img' arial-label='unicornio'>
    ðŸ¦„
  </span>
)

class App extends Component {

  send = (data) => {
    console.log(data)
  }

  render () {
    return (
      <div>
        <h1>
          Inputs NO controlados Refs <Unicorn />
        </h1>
        <InputiNoControlado
          onSend={this.send}
        />
      </div>
    )
  }
}


export default App

NOTA!!!:
--> Ventajas:
1.Todo el codigo es facil de manejar

--> Desventaja
La principal desventaja de extraer informacion de inputs no controlado,
es que esta informacion no la podemos ir revisando a medida que esta cambia
(a medida que el usiario va escribiendo informacion, borrando o corrigiendo, y volver a escribor en los inputs),
puesto que la informacion ingresada solo se puede validar o revisar, hasta que
el usuario da click en enviar (o el boton submit habilitado)
